// Base.Tools.Mixins
//
// Mixins are like functions, but they take zero or more parameters and output
// pieces of CSS.

// @font-face mixin
//
// @param {String} $family    - Name of the font-family
// @param {String} $filename  - Filename of the file
// @param {Number} $weight    - The designated font-weight
// @param {String} $style     - The designated font-style
@mixin webfont($family, $filename, $weight, $style) {
    @font-face {
        src:
            url('#{$filename}.woff2') format('woff2'),
            url('#{$filename}.woff') format('woff'),
            url('#{$filename}.ttf') format('truetype');
        font-family: $family;
        font-weight: $weight;
        font-style: $style;
    }
}

// Breakpoint mixin
//
// @param {String} $breakpoint - The screen width where to apply the content
// @param {Bool}   $type       - 'min-width', 'max-width'
@mixin breakpoint($breakpoint, $type: 'min-width') {
    $width: map-get($tweakpoints, $breakpoint) or map-get(map-get($breakpoints, $breakpoint), 'width');

    @if not $width {
        @error 'Breakpoint #{$breakpoint} not found in either $tweakpoints or $breakpoints';
    }

    @if $type == 'max-width' {
        $width: ($width / 1em * $browser-root-font-size - 1) / $browser-root-font-size * 1em;
    }

    @media (unquote($type): $width) {
        @content;
    }
}

// Enforce GPU to kick in for smooth animations and maximum performance
//
// #hack
@mixin animatable {
    backface-visibility: hidden;
}

// Generate scrollbars inside an element
//
// @param {String} $axis (y) - The axis on which to scroll. Can be x or y.
@mixin scrollable($axis: y, $type: auto) {
    overflow-#{$axis}: #{$type};
    -webkit-overflow-scrolling: touch;
}

// Make sure that there are no stacking margins on an element.
@mixin trim {
    > :last-child {
        margin-bottom: 0;
    }
}

// Cross browser SVG backgrounds. Only use if both SVG and PNG versions of
// image are available.
@mixin svg-background($file) {
    background-image: url('#{$file}.svg');

    .no-svg & {
        background-image: url('#{$file}.png');
    }
}

// Hide text on screen but have it available for screen readers
// Source: https://github.com/h5bp/html5-boilerplate/blob/master/src/css/main.css#L119
@mixin hide-text {
    position: absolute;
    clip: rect(0, 0, 0, 0);
    margin: -1px;
    border: none;
    padding: 0;
    width: 1px; // stylelint-disable-line
    height: 1px;
    overflow: hidden;
}

@mixin dashed-border($position: bottom) {
    background-image:
        linear-gradient(
            90deg,
            color(gray-light) 50%,
            color(white) 0%
        );
    background-repeat: repeat-x;
    background-position: $position;
    background-size: 4px 1px;
}
